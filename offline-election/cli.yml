name: offline-phragmen
version: "1.0"
author: Parity Technologies <admin@parity.io>
about: Diagnostic lab for everything election and phragmen related in a substrate chain.
args:
    - uri:
        short: u
        long: uri
        help: websockets uri of the substrate node
        value_name: URI
        takes_value: true
    - network:
        short: n
        long: network
        help: network address format. Can be kusama|polkadot|substrate. Default is polkadot
        takes_value: true
    - at:
        long: at
        help: scrape the data at the given block hash. Default will be the head of the chain
        takes_value: true
    - verbose:
        multiple: true
        short: v
        long: verbose
        help: Print more output

subcommands:
    - staking:
        about: Runs the phragmen election for staking validators and nominators.
        args:
            - count:
                short: c
                long: count
                help: count of member/validators to elect. Default is `Staking.validatorCount`.
                takes_value: true
            - min-count:
                short: m
                long: min-count
                help: minimum number of members/validators to elect. If less candidates are available, phragmen will go south. Default is 0.
                takes_value: true
            - output:
                short: o
                long: output
                help: json output file name. dumps the results into if given
                takes_value: true
            - iterations:
                short: i
                long: iterations
                help: number of post-processing iterations to run. Default is 0
                takes_value: true
            - check-exposures:
                long: check-exposures
                help: (EXPERIMENTAL) check on-chain exposures at the given era with support values computed locally. This will most often only work at block number right after an election. The era must be provided. if you put 0, then it will resolve to `Staking::current_era()`.
                takes_value: true
            - reduce:
                short: r
                long: reduce
                help: should run reduce on the result or not.
                takes_value: false
    - council:
        about: Runs the phragmen election for the elections-phragmen module (usually used for council).
        args:
            - count:
                short: c
                long: count
                help: count of member/validators to elect. Default is 50
                takes_value: true
            - min-count:
                short: m
                long: min-count
                help: minimum number of members/validators to elect. If less candidates are available, phragmen will go south. Default is 0
                takes_value: true
            - output:
                short: o
                long: output
                help: json output file name. dumps the results into if given
                takes_value: true
            - iterations:
                short: i
                long: iterations
                help: number of post-processing iterations to run. Default is 0
                takes_value: true
    - dangling-nominators:
            about: Get the dangling nominators in staking. Don't forget to turn on logging.
    - current:
            about: Get the current set.
